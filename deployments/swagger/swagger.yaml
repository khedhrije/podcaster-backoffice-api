definitions:
  pkg.BlockProgramsResponse:
    properties:
      ID:
        type: string
      description:
        type: string
      name:
        type: string
      position:
        type: integer
    type: object
  pkg.BlockResponse:
    properties:
      ID:
        type: string
      description:
        type: string
      kind:
        type: string
      name:
        type: string
    type: object
  pkg.CategoryResponse:
    properties:
      ID:
        type: string
      description:
        type: string
      name:
        type: string
      parentID:
        type: string
    type: object
  pkg.CreateBlockRequestJSON:
    properties:
      description:
        type: string
      kind:
        type: string
      name:
        type: string
    type: object
  pkg.CreateCategoryRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
      parentID:
        type: string
    type: object
  pkg.CreateEpisodeRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
      position:
        type: integer
      programID:
        type: string
    type: object
  pkg.CreateMediaRequestJSON:
    properties:
      directLink:
        type: string
      episodeID:
        type: string
      kind:
        type: string
    type: object
  pkg.CreateProgramRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  pkg.CreateTagRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  pkg.CreateWallRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  pkg.EpisodeResponse:
    properties:
      ID:
        type: string
      description:
        type: string
      name:
        type: string
      position:
        type: integer
      programID:
        type: string
    type: object
  pkg.ErrorJSON:
    properties:
      error:
        type: string
    type: object
  pkg.MediaResponse:
    properties:
      ID:
        type: string
      directLink:
        type: string
      episodeID:
        type: string
      kind:
        type: string
    type: object
  pkg.OverwriteBlocksRequestJSON:
    properties:
      orderedBlocks:
        additionalProperties:
          type: integer
        type: object
      wallID:
        type: string
    type: object
  pkg.OverwriteProgramsRequestJSON:
    properties:
      blockID:
        type: string
      orderedPrograms:
        additionalProperties:
          type: integer
        type: object
    type: object
  pkg.ProgramResponse:
    properties:
      ID:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  pkg.TagResponse:
    properties:
      ID:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  pkg.UpdateBlockRequestJSON:
    properties:
      description:
        type: string
      kind:
        type: string
      name:
        type: string
    type: object
  pkg.UpdateCategoryRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
      parentID:
        type: string
    type: object
  pkg.UpdateEpisodeRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
      position:
        type: integer
      programID:
        type: string
    type: object
  pkg.UpdateMediaRequestJSON:
    properties:
      directLink:
        type: string
      episodeID:
        type: string
      kind:
        type: string
    type: object
  pkg.UpdateProgramRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  pkg.UpdateTagRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  pkg.UpdateWallRequestJSON:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  pkg.WallResponse:
    properties:
      ID:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: khedhri.je@gmail.com
    name: API Support
  description: This is the documentation for the podcaster-backoffice-api.
  termsOfService: http://swagger.io/terms/
  title: podcaster-backoffice-api
  version: 1.0.0
paths:
  /private/blocks:
    get:
      description: Find all blocks
      operationId: find-all-blocks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.BlockResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all blocks
      tags:
      - blocks
    post:
      description: Create a new block
      operationId: create-block
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.CreateBlockRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Create a new block
      tags:
      - blocks
  /private/blocks/{uuid}:
    delete:
      description: Delete a block
      operationId: delete-block
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Delete a block
      tags:
      - blocks
    get:
      description: Find a block
      operationId: find-block
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.BlockResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a block
      tags:
      - blocks
    put:
      description: Update block
      operationId: update-block
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.UpdateBlockRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Update block
      tags:
      - blocks
  /private/blocks/{uuid}/programs:
    get:
      description: Find all programs of a block
      operationId: find-block-programs
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.BlockProgramsResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all programs of a block
      tags:
      - blocks
  /private/blocks/{uuid}/programs/overwrite:
    put:
      description: Overwrite the programs of a specific block by replacing all existing
        programs with new ones
      operationId: overwrite-block-programs
      parameters:
      - description: UUID of the block
        in: path
        name: uuid
        required: true
        type: string
      - description: List of programs' UUIDs to set
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.OverwriteProgramsRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Overwrite programs of a block
      tags:
      - blocks
  /private/categories:
    get:
      description: Find all categories
      operationId: find-all-categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.CategoryResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all categories
      tags:
      - categories
    post:
      description: Create a new category
      operationId: create-category
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.CreateCategoryRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Create a new category
      tags:
      - categories
  /private/categories/{uuid}:
    delete:
      description: Delete a category
      operationId: delete-category
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Delete a category
      tags:
      - categories
    get:
      description: Find a category
      operationId: find-category
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.CategoryResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a category
      tags:
      - categories
    put:
      description: Update category
      operationId: update-category
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.UpdateCategoryRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Update category
      tags:
      - categories
  /private/categories/{uuid}/programs:
    get:
      description: Find all category's programs
      operationId: find-category-programs
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.ProgramResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all category's programs
      tags:
      - categories
  /private/episodes:
    get:
      description: Find all episodes
      operationId: find-all-episodes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.EpisodeResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all episodes
      tags:
      - episodes
    post:
      description: Create a new episode
      operationId: create-episode
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.CreateEpisodeRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Create a new episode
      tags:
      - episodes
  /private/episodes/{uuid}:
    delete:
      description: Delete an episode
      operationId: delete-episode
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Delete an episode
      tags:
      - episodes
    get:
      description: Find an episode
      operationId: find-episode
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.EpisodeResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find an episode
      tags:
      - episodes
    put:
      description: Update episode
      operationId: update-episode
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.UpdateEpisodeRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Update episode
      tags:
      - episodes
  /private/medias:
    get:
      description: Find all medias
      operationId: find-all-medias
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.MediaResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all medias
      tags:
      - medias
    post:
      description: Create a new media
      operationId: create-media
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.CreateMediaRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Create a new media
      tags:
      - medias
  /private/medias/{uuid}:
    delete:
      description: Delete a media
      operationId: delete-media
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Delete a media
      tags:
      - medias
    get:
      description: Find a media
      operationId: find-media
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.MediaResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a media
      tags:
      - medias
    put:
      description: Update media
      operationId: update-media
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.UpdateMediaRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Update media
      tags:
      - medias
  /private/programs:
    get:
      description: Find all programs
      operationId: find-all-programs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.ProgramResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all programs
      tags:
      - programs
    post:
      description: Create a new program
      operationId: create-program
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.CreateProgramRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Create a new program
      tags:
      - programs
  /private/programs/{uuid}:
    delete:
      description: Delete a program
      operationId: delete-program
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Delete a program
      tags:
      - programs
    get:
      description: Find a program
      operationId: find-program
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.ProgramResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a program
      tags:
      - programs
    put:
      description: Update program
      operationId: update-program
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.UpdateProgramRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Update program
      tags:
      - programs
  /private/programs/{uuid}/categories:
    get:
      description: Find a program's categories
      operationId: find-program-categories
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.CategoryResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a program's categories
      tags:
      - programs
  /private/programs/{uuid}/categories/overwrite:
    put:
      description: Overwrite the categories of a specific program by replacing all
        existing categories with new ones
      operationId: overwrite-program-categories
      parameters:
      - description: UUID of the program
        in: path
        name: uuid
        required: true
        type: string
      - description: List of categories' UUIDs to set
        in: body
        name: request
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Overwrite categories of a program
      tags:
      - programs
  /private/programs/{uuid}/episodes:
    get:
      description: Find a program's episodes
      operationId: find-program-episodes
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.EpisodeResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a program's episodes
      tags:
      - programs
  /private/programs/{uuid}/tags:
    get:
      description: Find a program's tags
      operationId: find-program-tags
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.TagResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a program's tags
      tags:
      - programs
  /private/programs/{uuid}/tags/overwrite:
    put:
      description: Overwrite the tags of a specific program by replacing all existing
        tags with new ones
      operationId: overwrite-program-tags
      parameters:
      - description: UUID of the program
        in: path
        name: uuid
        required: true
        type: string
      - description: List of tags UUIDs to set
        in: body
        name: request
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Overwrite tags of a program
      tags:
      - programs
  /private/tags:
    get:
      description: Find all tags
      operationId: find-all-tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.TagResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all tags
      tags:
      - tags
    post:
      description: Create a new tag
      operationId: create-tag
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.CreateTagRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Create a new tag
      tags:
      - tags
  /private/tags/{uuid}:
    delete:
      description: Delete a tag
      operationId: delete-tag
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Delete a tag
      tags:
      - tags
    get:
      description: Find a tag
      operationId: find-tag
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.TagResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a tag
      tags:
      - tags
    put:
      description: Update tag
      operationId: update-tag
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.UpdateTagRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Update tag
      tags:
      - tags
  /private/tags/{uuid}/programs:
    get:
      description: Find all tag's programs
      operationId: find-tag-programs
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.ProgramResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all tag's programs
      tags:
      - tags
  /private/walls:
    get:
      description: Find all walls
      operationId: find-all-walls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.WallResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all walls
      tags:
      - walls
    post:
      description: Create a new wall
      operationId: create-wall
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.CreateWallRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Create a new wall
      tags:
      - walls
  /private/walls/{uuid}:
    delete:
      description: Delete a wall
      operationId: delete-wall
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Delete a wall
      tags:
      - walls
    get:
      description: Find a wall
      operationId: find-wall
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.WallResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find a wall
      tags:
      - walls
    put:
      description: Update wall
      operationId: update-wall
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.UpdateWallRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Update wall
      tags:
      - walls
  /private/walls/{uuid}/blocks:
    get:
      description: Find all wall's blocks
      operationId: find-wall-block
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.BlockResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Find all wall's blocks
      tags:
      - walls
  /private/walls/{uuid}/blocks/overwrite:
    put:
      description: Overwrite the blocks of a specific wall by replacing all existing
        blocks with new ones
      operationId: overwrite-wall-blocks
      parameters:
      - description: UUID of the wall
        in: path
        name: uuid
        required: true
        type: string
      - description: List of blocks' UUIDs to set
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg.OverwriteBlocksRequestJSON'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg.ErrorJSON'
      summary: Overwrite blocks of a wall
      tags:
      - walls
securityDefinitions:
  Bearer-APIKey:
    description: Type "Bearer" followed by a space and a valid API key.
    in: header
    name: Authorization
    type: apiKey
  Bearer-JWT:
    description: Type "Bearer" followed by a space and a valid JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
